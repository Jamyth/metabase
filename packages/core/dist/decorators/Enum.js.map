{"version":3,"file":"Enum.js","sourceRoot":"","sources":["../../src/decorators/Enum.ts"],"names":[],"mappings":";;;AAAA,+DAA8D;AAEjD,QAAA,QAAQ,GAAG,IAAA,qCAAiB,EAAC,MAAM,CAAC,CAAC;AAqBlD,SAAgB,IAAI;IAChB,OAAO,UAAC,MAAM;QACV,OAAO,CAAC,cAAc,CAAC,gBAAQ,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;IACnD,CAAC,CAAC;AACN,CAAC;AAJD,oBAIC","sourcesContent":["import { createMetadataKey } from '../util/createMetadataKey';\n\nexport const ENUM_KEY = createMetadataKey('ENUM');\n\n/**\n * attention:\n * Since `enum` will transpile to normal JavaScript `object`,\n * currently there is no good option to get the name of the enum, or other information\n *\n * Suggest create a class with static fields as `enum`\n *\n * @example\n * \\@Enum()\n * class UserRole {\n *      static readonly ADMIN = 'ADMIN';\n *      static readonly USER = 'USER';\n * }\n *\n * class UserView {\n *      \\@Property()\n *      role: UserRole\n * }\n */\nexport function Enum(): ClassDecorator {\n    return (target) => {\n        Reflect.defineMetadata(ENUM_KEY, true, target);\n    };\n}\n"]}